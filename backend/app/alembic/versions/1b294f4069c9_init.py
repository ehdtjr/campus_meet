"""init

Revision ID: 1b294f4069c9
Revises: 
Create Date: 2024-10-09 06:27:10.111317

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1b294f4069c9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('recipient',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.Integer(), nullable=False),
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type', 'type_id', name='uix_type_type_id')
    )
    op.create_index(op.f('ix_recipient_type'), 'recipient', ['type'], unique=False)
    op.create_index(op.f('ix_recipient_type_id'), 'recipient', ['type_id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('gender', sa.String(length=20), nullable=False),
    sa.Column('profile', sa.String(length=1024), nullable=True),
    sa.Column('is_online', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('message',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('NORMAL', 'RESOLVE_TOPIC_NOTIFICATION', name='messagetype'), nullable=False),
    sa.Column('recipient_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('rendered_content', sa.String(), nullable=True),
    sa.Column('date_sent', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('has_attachment', sa.Boolean(), nullable=False),
    sa.Column('has_image', sa.Boolean(), nullable=False),
    sa.Column('has_link', sa.Boolean(), nullable=False),
    sa.Column('search_tsvector', postgresql.TSVECTOR(), sa.Computed("to_tsvector('simple', content)", persisted=True), nullable=True),
    sa.ForeignKeyConstraint(['recipient_id'], ['recipient.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sender_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_message_has_attachment'), 'message', ['has_attachment'], unique=False)
    op.create_index(op.f('ix_message_has_image'), 'message', ['has_image'], unique=False)
    op.create_index(op.f('ix_message_has_link'), 'message', ['has_link'], unique=False)
    op.create_index(op.f('ix_message_search_tsvector'), 'message', ['search_tsvector'], unique=False)
    op.create_index('message_recipient', 'message', ['recipient_id', 'id'], unique=False)
    op.create_index('message_search_tsvector_idx', 'message', ['search_tsvector'], unique=False, postgresql_using='gin')
    op.create_index('message_sender_recipient', 'message', ['sender_id', 'recipient_id'], unique=False)
    op.create_table('streams',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('date_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('recipient_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['recipient_id'], ['recipient.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_streams_name'), 'streams', ['name'], unique=False)
    op.create_index(op.f('ix_streams_type'), 'streams', ['type'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('recipient_id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('is_user_active', sa.Boolean(), nullable=False),
    sa.Column('is_muted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['recipient_id'], ['recipient.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'recipient_id')
    )
    op.create_index('subscription_recipient_id_user_id_idx', 'subscriptions', ['recipient_id', 'user_id'], unique=False, postgresql_where=sa.text('active = true AND is_user_active = true'))
    op.create_table('user_location',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('lat', sa.Float(), nullable=False),
    sa.Column('lng', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_message',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['message.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_message')
    op.drop_table('user_location')
    op.drop_index('subscription_recipient_id_user_id_idx', table_name='subscriptions', postgresql_where=sa.text('active = true AND is_user_active = true'))
    op.drop_table('subscriptions')
    op.drop_index(op.f('ix_streams_type'), table_name='streams')
    op.drop_index(op.f('ix_streams_name'), table_name='streams')
    op.drop_table('streams')
    op.drop_index('message_sender_recipient', table_name='message')
    op.drop_index('message_search_tsvector_idx', table_name='message', postgresql_using='gin')
    op.drop_index('message_recipient', table_name='message')
    op.drop_index(op.f('ix_message_search_tsvector'), table_name='message')
    op.drop_index(op.f('ix_message_has_link'), table_name='message')
    op.drop_index(op.f('ix_message_has_image'), table_name='message')
    op.drop_index(op.f('ix_message_has_attachment'), table_name='message')
    op.drop_table('message')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_recipient_type_id'), table_name='recipient')
    op.drop_index(op.f('ix_recipient_type'), table_name='recipient')
    op.drop_table('recipient')
    # ### end Alembic commands ###
