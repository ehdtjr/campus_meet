# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - feat_cicd
#       - feature/user-authentication
#   pull_request:
#     branches:
#       - main  # 메인 브랜치로의 PR이 생성되거나 업데이트될 때
#       - feat_cicd
#       - feature/user-authentication
#   workflow_dispatch:

# jobs:
#   build:
#     runs-on: ubuntu-latest
    
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Install Docker Compose
#         run: |
#           sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
#           sudo chmod +x /usr/local/bin/docker-compose
#           docker-compose --version  # Verify installation

#       - name: Create .env file
#         run: |
#           echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" > .env
#           echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
#           echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
#           # echo "ANOTHER_SECRET=${{ secrets.ANOTHER_SECRET }}" >> .env

#       - name: Build and push Docker images
#         run: |
#           docker-compose -f docker-compose.yml build
#           docker-compose -f docker-compose.yml up -d

#       # # 테스트 단계 추가 가능 (옵션)
#       # - name: Run tests
#       #   run: |
#       #     docker-compose -f docker-compose.yml exec <service_name> pytest

#       - name: Tear down
#         run: docker-compose -f docker-compose.yml down