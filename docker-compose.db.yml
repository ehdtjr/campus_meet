version: "3.8"

services:
  db:
    image: postgres:16
    restart: always
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - backend/.env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
    ports:
      - "5432:5432"

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"

  celery-worker:
    image: public.ecr.aws/u8i2f6l2/integration/db:worker-latest
    build:
      context: ./backend
    command: [ "celery", "-A", "app.celery.worker", "worker", "--loglevel=info" ]
    volumes:
      - ./backend:/app
    depends_on:
      - redis
      - db
    env_file:
      - backend/.env
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  celery-beat:
    image: public.ecr.aws/u8i2f6l2/integration/db:beat-latest
    build:
      context: ./backend
    command: [ "celery", "-A", "app.celery.worker", "beat", "--loglevel=info" ]
    volumes:
      - ./backend:/app
    depends_on:
      - redis
      - db
    env_file:
      - backend/.env
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - REDIS_HOST=redis
      - REDIS_PORT=6379

volumes:
  app-db-data:
